<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>書誌 on suzmemo</title><link>https://dddsuz2.github.io/suzmemo/tags/%E6%9B%B8%E8%AA%8C/</link><description>Recent content in 書誌 on suzmemo</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 15 Aug 2023 20:31:58 +0900</lastBuildDate><atom:link href="https://dddsuz2.github.io/suzmemo/tags/%E6%9B%B8%E8%AA%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>【書誌】詳解システムパフォーマンス</title><link>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E8%A9%B3%E8%A7%A3%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9/</link><pubDate>Tue, 15 Aug 2023 20:31:58 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E8%A9%B3%E8%A7%A3%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9/</guid><description>まえがき 1章　イントロダクション 1.1　システムパフォーマンス 1.2　職種 1.3　作業 1.4　分析の視点 1.5　パフォーマンスエンジニアリングの難しさと面白さ 1.5.1　主観的な性質 1.5.2　複雑さ 1.5.3　複数の原因の相互作用 1.5.4　複数のパフォーマンス障害の同時発生 1.6　レイテンシ 1.7　可観測性 1.7.1　カウンタ、統計量、指標 1.7.2　プロファイリング 1.7.3　トレーシング 1.8　実験 1.9　クラウドコンピューティング 1.10　メソドロジ 1.10.1　60秒で終わるLinuxパフォーマンス分析 1.11　ケーススタディ 1.11.1　ディスクの速度低下 1.11.2　ソフトウェア変更 1.11.3　より深く学ぶために 1.12　参考文献 2章　メソドロジ 2.1　用語 2.2　モデル 2.2.1　テスト対象システム（SUT） 2.2.2　キューイングシステム 2.3　コンセプト 2.3.1　レイテンシ 2.3.2　タイムスケール 2.3.3　トレードオフ 2.3.4　チューニング 2.3.5　適切性のレベル 2.</description></item><item><title>【書誌】プログラマの考え方がおもしろいほど身につく本</title><link>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E8%80%83%E3%81%88%E6%96%B9%E3%81%8C%E3%81%8A%E3%82%82%E3%81%97%E3%82%8D%E3%81%84%E3%81%BB%E3%81%A9%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC/</link><pubDate>Mon, 14 Aug 2023 00:30:18 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E8%80%83%E3%81%88%E6%96%B9%E3%81%8C%E3%81%8A%E3%82%82%E3%81%97%E3%82%8D%E3%81%84%E3%81%BB%E3%81%A9%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC/</guid><description>謝辞 イントロダクション 本書について 第1章問題解決の戦略 1.1 古典的な問題 1.1.1 狐・ガチョウ・トウモロコシ 1.1.2 スライドパズル 1.1.3 数独 1.1.4 Quarrasi ロック 1.2 一般的問題解決テクニック 1.2.1 常に計画を持て 1.2.2 問題を言い換える 1.2.3 問題を分割する 1.2.4 知っていることから始める 1.2.5 問題を簡略化する 1.2.6 類似点を探す 1.2.7 実験する 1.2.8 イライラしない 1.3 演習 第2章パズル 2.1 本章で使うC++のおさらい 2.2 パターンの出力 2.3 入力の処理 2.3.1 問題をかみ砕く 2.3.2 パーツを取りまとめる 2.4 状態の追跡 2.5 結論 2.6 演習問題 第3章配列による問題解決 3.1 配列のおさらい 3.1.1 保存 3.1.2 コピー 3.1.3 取得と検索 3.1.4 ソート 3.1.5 統計処理 3.2 配列を使った問題解決 3.2.1 リファクタリング 3.3 固定データの配列 3.</description></item><item><title>【メモ】AWS</title><link>https://dddsuz2.github.io/suzmemo/%E3%83%A1%E3%83%A2aws/</link><pubDate>Thu, 03 Aug 2023 17:28:41 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E3%83%A1%E3%83%A2aws/</guid><description/></item><item><title>【書誌】入門Python3</title><link>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E5%85%A5%E9%96%80python3/</link><pubDate>Wed, 02 Aug 2023 23:08:54 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E5%85%A5%E9%96%80python3/</guid><description>監訳者まえがき まえがき 第Ⅰ部　Pythonの基礎 1章 Pyの味見 1.1　なぞなぞ 1.2　小さなプログラム 1.3　少し大きなプログラム 1.4　現実の世界でのPython 1.5　Pythonと惑星Xの他言語の比較 1.6　では、なぜPythonなのか 1.7　Pythonを避けるべきとき 1.8　Python 2かPython 3か 1.9　Pythonのインストール 1.10　Pythonの実行 1.10.1　対話型インタプリタの使い方 1.10.2　Pythonファイルの使い方 1.10.3　このあとはどうなる？ 1.11　The Zen of Python 1.12　次章では 1.13　復習課題 2章 データ：型、値、変数、そして名前 2.1　Pythonのデータはオブジェクトである 2.2　型 2.3　ミュータビリティ 2.4　リテラル値 2.5　変数 2.6　代入 2.7　変数は名前であって場所ではない 2.8　複数の名前への代入 2.9　名前への再代入 2.10　コピー 2.11　適切な変数名の選択 2.12　次章では 2.</description></item><item><title>【書誌】Beyond_Interaction（改訂第3版）</title><link>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8Cbeyond_interaction%E6%94%B9%E8%A8%82%E7%AC%AC3%E7%89%88/</link><pubDate>Tue, 01 Aug 2023 22:26:43 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8Cbeyond_interaction%E6%94%B9%E8%A8%82%E7%AC%AC3%E7%89%88/</guid><description>
Chapter 1　openFrameworks入門 1-1　openFrameworkについて 1-2　作例とコミュニティ Chapter 2　openFrameworksプログラミング初級編 2-1　プログラムの入手とインストール 2-2　サンプルプログラムの起動 2-3　openFrameworksプログラムを始めよう 2-4　ProjectGeneratorで新規プロジェクトを作成 2-5　図形を描く 2-6　色の設定 2-7　数値の記憶と計算 2-8　たくさんの図形を一気に描く 2-9　たくさんの値を記憶する―配列 2-10　移動する―アニメーション 2-11　条件分岐―「もし○○なら××せよ」 2-12　たくさんの図形を移動する 2-13　図形に触れる―インタラクション 2-14　より高度な表現へ Chapter 3　openFrameworksプログラミング中級編 3-1　プロジェクトの構造をより深く理解する 3-2　いろいろなメディアを扱う 3-3　OOOF：オブジェクト指向oFプログラミング 3-4　アドオンの利用 3-5　楽器を作る Chapter 4　openFrameworksプログラミング上級編 4-1　3Dグラフィクスプログラミングの基本 4-2　より自由な3D図形を描く―ポリゴンメッシュの操作 4-3　GLSL (シェーダー) を使う―ofShader Chapter 5　openFrameworksの現状と未来 5-1　openFrameworksは終わったのか? 5-2　クリエイティブ・コーディング環境の発展と進化 5-3　クリエイティブ・コーディングの歴史の継承 5-4　「ツール」ではなく「マテリアル」としてのコンピューティング 5-5　オープンなフレームワークであること 5-6　openFrameworksを超えて</description></item><item><title>【書誌】キミが信頼されないのは話が「ズレてる」だけなんだ</title><link>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E3%82%AD%E3%83%9F%E3%81%8C%E4%BF%A1%E9%A0%BC%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84%E3%81%AE%E3%81%AF%E8%A9%B1%E3%81%8C%E3%82%BA%E3%83%AC%E3%81%A6%E3%82%8B%E3%81%A0%E3%81%91%E3%81%AA%E3%82%93%E3%81%A0/</link><pubDate>Tue, 01 Aug 2023 19:54:05 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E3%82%AD%E3%83%9F%E3%81%8C%E4%BF%A1%E9%A0%BC%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84%E3%81%AE%E3%81%AF%E8%A9%B1%E3%81%8C%E3%82%BA%E3%83%AC%E3%81%A6%E3%82%8B%E3%81%A0%E3%81%91%E3%81%AA%E3%82%93%E3%81%A0/</guid><description>1章　〈知らぬ間に、信頼を失っていた!?〉こんな話し方、していませんか？ 2章　〈まずは「相手の話」「指示」をちゃんと聞く〉この「聞き方」で、返事がズレない 3章　〈「認識のズレ」をなくす〉この「確認」が必要だった！ 4章　〈話が長く、脱線しやすい人は〉もっと丁寧に話そう 5章　〈「わかってるね！」と評価が上がる〉「ダメな質問」「すべき質問」はコレだ！ 6章　〈キーパーソン、重要な人から信頼を勝ち取れる！〉ひとつ上の話し方 【0】10秒でできる＜会話のズレ度・チェック＞
【1】話がズレると、会話を続ける気がしない
【1.1】話がかみ合わない二つの理由
【1.2】ズレが生じる3つのパターン
【1.3】ズレリセット3か条
【2】返事がズレないための聞き方
【2.1】会話のズレスパイラルとは
【2.2】聞く姿勢の作り方
【2.3】バックトラッキング
【2.4】会話のリズム
【2.5】リアクションのコツ
【2.6】本気のリスニング
【3】対人関係で気を付けること
【3.1】確認のコツ
【3.2】ピントが合う二つの質問
【3.3】的外れをゼロにする質問
【3.4】スタンスを合わせる
【3.5】常備するべき二つのグッズ
【3.6】確認忘れの対処法
【3.7】ちなみに作戦
【4】誤解を生む話し方とは？
【4.1】話し方の基本
【4.2】最後までしっかり話きる
【4.3】ぼんやり表現を「4W2H」で分解する
【4.4】「あの・この・その」に気を付ける
【4.5】専門用語は相手に合わせて使う
【4.6】話がそれる人、3つの共通点
【4.7】主語と述語を近づける
【4.8】「結論ファースト」で話す
【4.9】SDS法
【4.10】PREP法
【4.11】DESC法
【5】ダメな質問のパターン5つ
【5.1】調べるべきイチオシの情報
【5.2】情報収集のテクニック
【5.3】質問の3つの機能
【6.0】相手が話したいモードになるスイッチを押す
【6.1】必勝パターン2つ
【6.2】何でも話してもらえる3つの極意
【6.3】本音を打ち明けてもらうには
【6.4】聞き上手になるには
【6.5】相手に共感するには</description></item><item><title>【書誌】質問力を鍛える本</title><link>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E8%B3%AA%E5%95%8F%E5%8A%9B%E3%82%92%E9%8D%9B%E3%81%88%E3%82%8B%E6%9C%AC/</link><pubDate>Fri, 21 Jul 2023 01:36:57 +0900</pubDate><guid>https://dddsuz2.github.io/suzmemo/%E6%9B%B8%E8%AA%8C%E8%B3%AA%E5%95%8F%E5%8A%9B%E3%82%92%E9%8D%9B%E3%81%88%E3%82%8B%E6%9C%AC/</guid><description>目次
はじめに　なぜ「質問力」が大切なのか？
私は質問学者（questionologist）だ／決断，創造，人間関係，リーダーシップに質問はどのように役立つか？／4歳の女児から学ぶ／質問の五つの敵／質問を習慣化する／なぜ今，質問が重要なのか？／質問が人間関係を強める／民主主義の未来は質問にかかっている？
第1章　よりよい意思決定のための質問
なぜ自分の決断に疑問をもたなければならないのか？／なぜ私は自分が信じていることを信じているのか（ 間違っていたらどうしよう？）／戦士か偵察兵か／言われたことを受け入れなければならないのか？／批判的思考に自分の思惑が入り込んでいないか？／「イエスかノーか」ではない決断／部外者ならどうするか？／絶対に失敗しないなら何をする？／恐怖心に対して，質問はどう役立つか？／「未来の私」なら何を決めるか？／自分が進化し，活躍できるのはどの選択肢か？／この決断を後で他人にどう説明するか？／私のテニスボールは何か？
第2章　創造性を引き出すための質問
なぜ創造するのか？／私の創造性はどこへ行った？／問題を探しに行くとしたら？／世界に足りないものは何か？／なぜこれが私の問題なのか？／私の亀の甲羅はどこ？／私のゴールデンタイムはいつか？／私は蝶を殺したいのだろうか？／どこからでも始められるようにしたら？／どうすれば行き詰まりから脱することができるか？／私は「公開」する準備ができているだろうか？／終わらせたいのか，改善したいのか？／どうすれば常に「途上」にいられるか？
第3章　他者とのつながりを深めるための質問
なぜつながるのか？／「お元気ですか」を超えてみたら？／どうすれば全身で聴けるか？／アドバイスを減らして，もっと質問したら？ ／批判していることについて，自分に思い当たる節がないか？／決めつけを好奇心に置き換えたらどうだろう？／どうすれば自分の偏見を認知できるか？／どうすればより強いパートナーシップを築けるか？／求めるのは正しさか，平安か？／質問によって職場での人間関係を築けるか？／管理職が「下に質問する」のが難しいのはなぜか？／セールスの売り込みを「質問の売り込み」に置き換えたら？
第4章　より強いリーダーとなるための質問
「この間違いを正すために何ができる？」／なぜ私はリーダーになるのか？／謙虚になる自信があるか？／リーダーシップを発揮するために，なぜ身を引かなければならないのか？／私の行動規範は何か？／私にできる最低限のことは何だろうか？／どうすれば「自らを廃業に追い込む」ような会社になれるのか？／外で何が起こっているのか，何か手伝えることはあるか？／探すのは，壊れたものか，うまくいっているものか？／私は本当に好奇心に満ちた文化を望んでいるのだろうか？／どうしたら安心して質問ができ，やりがいを感じられ，生産的になれるか？
おわりに　問いかける人生
質問をどうやって行動に移すか？／「質問筋肉」をどうウォーミングアップするか？／よりよい質問をつくれるか？／自分に備わっている「デタラメ検出器」を試すには？／周りの世界を新鮮な目で見たらどうだろうか？／どのように（誰と）打ち解けたらよいか？／自分にインタビューしてみたら？／質問で家族の絆を強められるか？／「宣言」を「宣言質問」に変えてみたら？／どうすればほかの人にもっと質問してもらえるだろうか？／私の「大きな美しい質問」は？
謝辞
質問リスト 【0】はじめに
【0.1】質問の価値とは？
【0.2】美しい質問とは？
【0.3】質問の役立て方とは？
【0.4】どうすればより良い質問者になれるか？
【0.5】質問の5つの敵
【0.6】質問によって人間関係で起こってしまう問題
【0.7】質問を習慣化する
【0.8】自分自身が美しい問いをしているかどうか確認する質問
【0.9】なぜ今質問が必要なのか？
【0.10】質問により人間関係を深める
【0.11】民主主義の未来は質問にかかっている？
【0.12】考えを深めるための5つの万能な質問
【1】自分の決断に疑問を持つ</description></item></channel></rss>